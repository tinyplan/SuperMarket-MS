<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.software.demo.dao.GoodsMapper">

    <sql id="goodsColumn">
        `goods_id`, `goods_name`, `goods_type`, `goods_cost`, `goods_price`, `production_date`, `duration`, `expiration_date`, `stock`
    </sql>

    <resultMap id="goodsMapping" type="Goods">
        <id column="goods_id" jdbcType="VARCHAR" property="id"/>
        <result column="goods_name" jdbcType="VARCHAR" property="name"/>
        <result column="goods_type" jdbcType="VARCHAR" property="type"/>
        <result column="goods_cost" jdbcType="DECIMAL" property="cost"
                typeHandler="com.software.demo.dao.type.BigDecimalToFloatTypeHandler"/>
        <result column="goods_price" jdbcType="DECIMAL" property="price"
                typeHandler="com.software.demo.dao.type.BigDecimalToFloatTypeHandler"/>
        <result column="stock" jdbcType="INTEGER" property="stock"/>
        <result column="production_date" jdbcType="VARCHAR" property="productionDate"/>
        <result column="duration" jdbcType="INTEGER" property="duration"/>
        <result column="expiration_date" jdbcType="VARCHAR" property="expirationDate"/>
    </resultMap>

    <insert id="insertGoods" parameterType="Goods">
        INSERT INTO `goods_info`
        (`goods_id`, `goods_name`, `goods_type`, `goods_cost`, `goods_price`, `stock`, `production_date`, `duration`, `expiration_date`)
        VALUES (#{id}, #{name}, #{type}, #{cost}, #{price}, #{stock}, #{productionDate}, #{duration}, #{expirationDate})
    </insert>

    <delete id="deleteGoods" parameterType="String">
        DELETE
        FROM `goods_info`
        WHERE `goods_id` = #{id}
    </delete>

    <update id="updateGoods" parameterType="Goods">
        UPDATE `goods_info`
        <set>
            <if test="price != null and price >= 0.0f">
                `goods_price` = #{price},
            </if>
            <if test="stock != null and stock >= 0">
                `stock` = #{stock},
            </if>
        </set>
        WHERE `goods_id` = #{id}
    </update>

    <select id="queryGoodsById" resultMap="goodsMapping">
        SELECT <include refid="goodsColumn"/>
        FROM `goods_info`
        WHERE `goods_id` = #{id}
    </select>

    <select id="queryRecordByRecordId" resultMap="com.software.demo.dao.StockRecordMapper.recordMapping">
        SELECT `record_id`, `import_id`, `goods_id`, `price`, `profits`, `effect_type`, `effect_num`, `effect_time`
        FROM `stock_record`
        WHERE `record_id` = #{id}
    </select>

    <select id="queryAllGoods" resultMap="goodsMapping">
        SELECT <include refid="goodsColumn"/>
        FROM `goods_info`
    </select>

    <select id="queryGoods" resultMap="goodsMapping">
        SELECT <include refid="goodsColumn"/>
        FROM `goods_info`
        LIMIT #{start}, #{limit}
    </select>

</mapper>